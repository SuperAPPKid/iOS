規範 - 架構部分
1.  使用MVVM架構(Model、View(Controller)、ViewModel)
2.  Protocol(協定)、Generic(泛型)、Extenstion(擴充功能)，另開資料夾
3.  將Service與Model分離
4.  config另開資料夾並加入.xcconfig檔，且要加上註解說明
5.  畫面配置及頁面跳轉架構使用storyboard
6.  實際頁面跳轉使用程式碼控制(請參考TableViewController didSelectRowAt方法)
7.  客製化cell使用xib
8.  UIKIT元件屬性可使用storyboard拉、事件處理用程式碼加入(請參考DetailViewController)
9.  程式排版方式請參考範例檔

規範 - 命名部分
1.  struct, enum, class, typedef, associatedtype, protocol宣告採大駝峰式命名
2.  屬性、方法、變數宣告採小駝峰式命名
3.  Extension檔案命名方式：類別+方法名.swift
4.  協定方法命名請使用apple預設delegate命名規則(參考DetailViewControllerDelegate)
5.  非UIKIT變數宣告及客製化屬性、方法請加入註解(方法使用///註解)

其他建議與經驗分享
1.  方法盡量控制在60行以內，類別盡量控制在600行以內
2.  將(life cycle、代理實作、事件處理、相關業務邏輯)使用extension分段並加入//MARK:標籤
3.  self如有必要才使用
4.  除了以identifier初始化物件可使用!，其餘情形優先使用guard let才使用if let
5.  勿使用try!和try?
6.  顏色設置可使用color literal
7.  compute property如為唯讀則不需加入關鍵字get(請參考Theme)
8.  單個方法使用closure(勿使用self?)、多組方法使用delegate
9.  layer繪製放在draw(_rect)
10. 盡量避免使用deprecated之類別

